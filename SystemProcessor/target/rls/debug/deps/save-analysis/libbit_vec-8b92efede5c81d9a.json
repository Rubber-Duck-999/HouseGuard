{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4","program":"/home/simon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bit_vec","/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=8b92efede5c81d9a","-C","extra-filename=-8b92efede5c81d9a","--out-dir","/home/simon/Documents/HouseGuard/SystemProcessor/target/rls/debug/deps","-L","dependency=/home/simon/Documents/HouseGuard/SystemProcessor/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/simon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/simon/Documents/HouseGuard/SystemProcessor/target/rls/debug/deps/libbit_vec-8b92efede5c81d9a.rmeta"},"prelude":{"crate_id":{"name":"bit_vec","disambiguator":[4561742663588597674,10209011909771728211]},"crate_root":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src","external_crates":[{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}}],"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":1592,"byte_end":65239,"line_start":31,"line_end":2110,"column_start":1,"column_end":50}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":1592,"byte_end":65239,"line_start":31,"line_end":2110,"column_start":1,"column_end":50},"name":"","qualname":"::","value":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":42},{"krate":0,"index":197},{"krate":0,"index":203},{"krate":0,"index":209},{"krate":0,"index":215},{"krate":0,"index":221},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":66},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":227},{"krate":0,"index":232},{"krate":0,"index":143},{"krate":0,"index":150},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":184},{"krate":0,"index":190},{"krate":0,"index":194}],"decl_id":null,"docs":" Collections implemented with bit vectors.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3795,"byte_end":3803,"line_start":105,"line_end":105,"column_start":11,"column_end":19},"name":"BitBlock","qualname":"::BitBlock","value":"BitBlock: Copy + Add<Self, Output = Self> + Sub<Self, Output = Self> + Shl<usize, Output\n= Self> + Shr<usize, Output = Self> + Not<Output = Self> + BitAnd<Self, Output\n= Self> + BitOr<Self, Output = Self> + BitXor<Self, Output = Self> + Rem<Self,\nOutput = Self> + Eq + Ord + hash::Hash","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Abstracts over a pile of bits (basically unsigned primitives)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4113,"byte_end":4117,"line_start":121,"line_end":121,"column_start":8,"column_end":12},"name":"bits","qualname":"::BitBlock::bits","value":"fn () -> usize","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" How many bits it has\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4181,"byte_end":4186,"line_start":124,"line_end":124,"column_start":8,"column_end":13},"name":"bytes","qualname":"::BitBlock::bytes","value":"fn () -> usize","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" How many bytes it has\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4164,"byte_end":4173,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4288,"byte_end":4297,"line_start":126,"line_end":126,"column_start":8,"column_end":17},"name":"from_byte","qualname":"::BitBlock::from_byte","value":"fn (byte: u8) -> Self","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Convert a byte into this type (lowest-order bits set)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4376,"byte_end":4386,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::BitBlock::count_ones","value":"fn (self) -> usize","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Count the number of 1's in the bitwise repr\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4426,"byte_end":4430,"line_start":130,"line_end":130,"column_start":8,"column_end":12},"name":"zero","qualname":"::BitBlock::zero","value":"fn () -> Self","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Get `0`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4465,"byte_end":4468,"line_start":132,"line_end":132,"column_start":8,"column_end":11},"name":"one","qualname":"::BitBlock::one","value":"fn () -> Self","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Get `1`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":6045,"byte_end":6051,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"BitVec","qualname":"::BitVec","value":"BitVec {  }","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" The bitvector type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":7843,"byte_end":7846,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"new","qualname":"<BitVec<u32>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `BitVec`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":7822,"byte_end":7831,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":8267,"byte_end":8276,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<BitVec<u32>>::from_elem","value":"fn (nbits: usize, bit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BitVec` that holds `nbits` elements, setting each element\n to `bit`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":8246,"byte_end":8255,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":8961,"byte_end":8974,"line_start":293,"line_end":293,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BitVec<u32>>::with_capacity","value":"fn (nbits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `BitVec` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":8940,"byte_end":8949,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":9737,"byte_end":9747,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<BitVec<u32>>::from_bytes","value":"fn (bytes: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\n with the most significant bits of each byte coming first. Each\n bit becomes `true` if equal to 1 or `false` if equal to 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":11080,"byte_end":11087,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<BitVec<u32>>::from_fn","value":"fn <F> (len: usize, mut f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BitVec` of the specified length where the value at each index\n is `f(index)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":11059,"byte_end":11068,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":12319,"byte_end":12325,"line_start":395,"line_end":395,"column_start":12,"column_end":18},"name":"blocks","qualname":"<BitVec<B>>::blocks","value":"fn (&self) -> Blocks<B>","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the underlying blocks of data\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":12298,"byte_end":12307,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":12539,"byte_end":12546,"line_start":404,"line_end":404,"column_start":12,"column_end":19},"name":"storage","qualname":"<BitVec<B>>::storage","value":"fn (&self) -> &[B]","parent":null,"children":[],"decl_id":null,"docs":" Exposes the raw block storage of this BitVec","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":12518,"byte_end":12527,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":12753,"byte_end":12764,"line_start":412,"line_end":412,"column_start":19,"column_end":30},"name":"storage_mut","qualname":"<BitVec<B>>::storage_mut","value":"fn (&mut self) -> &mut Vec<B>","parent":null,"children":[],"decl_id":null,"docs":" Exposes the raw block storage of this BitVec","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":12725,"byte_end":12734,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":13780,"byte_end":13783,"line_start":445,"line_end":445,"column_start":12,"column_end":15},"name":"get","qualname":"<BitVec<B>>::get","value":"fn (&self, i: usize) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value at index `i`, or `None` if the index is out of bounds.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":13759,"byte_end":13768,"line_start":444,"line_end":444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":14405,"byte_end":14408,"line_start":472,"line_end":472,"column_start":12,"column_end":15},"name":"set","qualname":"<BitVec<B>>::set","value":"fn (&mut self, i: usize, x: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of a bit at an index `i`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":14384,"byte_end":14393,"line_start":471,"line_end":471,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":15113,"byte_end":15120,"line_start":497,"line_end":497,"column_start":12,"column_end":19},"name":"set_all","qualname":"<BitVec<B>>::set_all","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all bits to 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":15092,"byte_end":15101,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":15574,"byte_end":15580,"line_start":517,"line_end":517,"column_start":12,"column_end":18},"name":"negate","qualname":"<BitVec<B>>::negate","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flips all bits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":15553,"byte_end":15562,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":16414,"byte_end":16419,"line_start":548,"line_end":548,"column_start":12,"column_end":17},"name":"union","qualname":"<BitVec<B>>::union","value":"fn (&mut self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the union of two bitvectors. This acts like the bitwise `or`\n function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":16393,"byte_end":16402,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":17262,"byte_end":17271,"line_start":578,"line_end":578,"column_start":12,"column_end":21},"name":"intersect","qualname":"<BitVec<B>>::intersect","value":"fn (&mut self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the intersection of two bitvectors. This acts like the\n bitwise `and` function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":17241,"byte_end":17250,"line_start":577,"line_end":577,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":18382,"byte_end":18392,"line_start":615,"line_end":615,"column_start":12,"column_end":22},"name":"difference","qualname":"<BitVec<B>>::difference","value":"fn (&mut self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the difference between two bitvectors.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":18361,"byte_end":18370,"line_start":614,"line_end":614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":18803,"byte_end":18806,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"all","qualname":"<BitVec<B>>::all","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all bits are 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":18782,"byte_end":18791,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":19483,"byte_end":19487,"line_start":655,"line_end":655,"column_start":12,"column_end":16},"name":"iter","qualname":"<BitVec<B>>::iter","value":"fn (&self) -> Iter<B>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the elements of the vector in order.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":19462,"byte_end":19471,"line_start":654,"line_end":654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":22847,"byte_end":22851,"line_start":778,"line_end":778,"column_start":12,"column_end":16},"name":"none","qualname":"<BitVec<B>>::none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all bits are 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":22826,"byte_end":22835,"line_start":777,"line_end":777,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":23240,"byte_end":23243,"line_start":796,"line_end":796,"column_start":12,"column_end":15},"name":"any","qualname":"<BitVec<B>>::any","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any bit is 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":23219,"byte_end":23228,"line_start":795,"line_end":795,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":23960,"byte_end":23968,"line_start":821,"line_end":821,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<BitVec<B>>::to_bytes","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Organises the bits into bytes, such that the first bit in the\n `BitVec` becomes the high-order bit of the first byte. If the\n size of the `BitVec` is not a multiple of eight then trailing bits\n will be filled-in with `false`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":25218,"byte_end":25224,"line_start":864,"line_end":864,"column_start":12,"column_end":18},"name":"eq_vec","qualname":"<BitVec<B>>::eq_vec","value":"fn (&self, v: &[bool]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares a `BitVec` to a slice of `bool`s.\n Both the `BitVec` and slice must have the same length.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":25197,"byte_end":25206,"line_start":863,"line_end":863,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":25768,"byte_end":25776,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BitVec<B>>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens a `BitVec`, dropping excess elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":25747,"byte_end":25756,"line_start":883,"line_end":883,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":26539,"byte_end":26546,"line_start":911,"line_end":911,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BitVec<B>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bits to be inserted in the given\n `BitVec`. The collection may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":26518,"byte_end":26527,"line_start":910,"line_end":910,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":27610,"byte_end":27623,"line_start":941,"line_end":941,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<BitVec<B>>::reserve_exact","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\n given `BitVec`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":27589,"byte_end":27598,"line_start":940,"line_end":940,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":28299,"byte_end":28307,"line_start":962,"line_end":962,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BitVec<B>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity in bits for this bit vector. Inserting any\n element less than this amount will not trigger a resizing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":28278,"byte_end":28287,"line_start":961,"line_end":961,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":28861,"byte_end":28865,"line_start":982,"line_end":982,"column_start":12,"column_end":16},"name":"grow","qualname":"<BitVec<B>>::grow","value":"fn (&mut self, n: usize, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":30810,"byte_end":30813,"line_start":1034,"line_end":1034,"column_start":12,"column_end":15},"name":"pop","qualname":"<BitVec<B>>::pop","value":"fn (&mut self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":30789,"byte_end":30798,"line_start":1033,"line_end":1033,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":31495,"byte_end":31499,"line_start":1064,"line_end":1064,"column_start":12,"column_end":16},"name":"push","qualname":"<BitVec<B>>::push","value":"fn (&mut self, elem: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes a `bool` onto the end.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":31474,"byte_end":31483,"line_start":1063,"line_end":1063,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":31855,"byte_end":31858,"line_start":1075,"line_end":1075,"column_start":12,"column_end":15},"name":"len","qualname":"<BitVec<B>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bits in this vector\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":31834,"byte_end":31843,"line_start":1074,"line_end":1074,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32082,"byte_end":32089,"line_start":1081,"line_end":1081,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BitVec<B>>::set_len","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits that this BitVec considers initialized.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32054,"byte_end":32063,"line_start":1080,"line_end":1080,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32227,"byte_end":32235,"line_start":1087,"line_end":1087,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BitVec<B>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no bits in this vector\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32206,"byte_end":32215,"line_start":1086,"line_end":1086,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32337,"byte_end":32342,"line_start":1091,"line_end":1091,"column_start":12,"column_end":17},"name":"clear","qualname":"<BitVec<B>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears all bits in this vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32316,"byte_end":32325,"line_start":1090,"line_end":1090,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":34977,"byte_end":34981,"line_start":1194,"line_end":1194,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"decl_id":null,"docs":" An iterator for `BitVec`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":35997,"byte_end":36005,"line_start":1235,"line_end":1235,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":236},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36838,"byte_end":36844,"line_start":1271,"line_end":1271,"column_start":12,"column_end":18},"name":"Blocks","qualname":"::Blocks","value":"Blocks {  }","parent":null,"children":[{"krate":0,"index":239}],"decl_id":null,"docs":" An iterator over the blocks of a `BitVec`.\n","sig":null,"attributes":[]}],"impls":[{"id":5,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":6324,"byte_end":6330,"line_start":207,"line_end":207,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":7644,"byte_end":7650,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":11335,"byte_end":11341,"line_start":367,"line_end":367,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32450,"byte_end":32456,"line_start":1096,"line_end":1096,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32590,"byte_end":32596,"line_start":1101,"line_end":1101,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32810,"byte_end":32816,"line_start":1110,"line_end":1110,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":33133,"byte_end":33139,"line_start":1122,"line_end":1122,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":33451,"byte_end":33457,"line_start":1135,"line_end":1135,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":33604,"byte_end":33610,"line_start":1142,"line_end":1142,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":34196,"byte_end":34202,"line_start":1161,"line_end":1161,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":34424,"byte_end":34430,"line_start":1170,"line_end":1170,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":34657,"byte_end":34663,"line_start":1180,"line_end":1180,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":34905,"byte_end":34911,"line_start":1190,"line_end":1190,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":35092,"byte_end":35096,"line_start":1199,"line_end":1199,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":35578,"byte_end":35582,"line_start":1214,"line_end":1214,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":35774,"byte_end":35778,"line_start":1221,"line_end":1221,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36098,"byte_end":36106,"line_start":1240,"line_end":1240,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36305,"byte_end":36313,"line_start":1249,"line_end":1249,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36497,"byte_end":36505,"line_start":1256,"line_end":1256,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36548,"byte_end":36554,"line_start":1258,"line_end":1258,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36926,"byte_end":36932,"line_start":1275,"line_end":1275,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":37206,"byte_end":37212,"line_start":1289,"line_end":1289,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":37371,"byte_end":37377,"line_start":1296,"line_end":1296,"column_start":45,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3806,"byte_end":3810,"line_start":106,"line_end":106,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":1542},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3814,"byte_end":3817,"line_start":107,"line_end":107,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":1595},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3840,"byte_end":3843,"line_start":108,"line_end":108,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":1600},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3866,"byte_end":3869,"line_start":109,"line_end":109,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":1668},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3893,"byte_end":3896,"line_start":110,"line_end":110,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":1674},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3920,"byte_end":3923,"line_start":111,"line_end":111,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":1649},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3940,"byte_end":3946,"line_start":112,"line_end":112,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":1653},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3969,"byte_end":3974,"line_start":113,"line_end":113,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":1658},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":3997,"byte_end":4003,"line_start":114,"line_end":114,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":1663},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4026,"byte_end":4029,"line_start":115,"line_end":115,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":1616},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4052,"byte_end":4054,"line_start":116,"line_end":116,"column_start":2,"column_end":4},"kind":"SuperTrait","from":{"krate":2,"index":2044},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4058,"byte_end":4061,"line_start":117,"line_end":117,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":2065},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":4071,"byte_end":4075,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":7121},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":6324,"byte_end":6330,"line_start":207,"line_end":207,"column_start":36,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":1779}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":7644,"byte_end":7650,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":46},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":11335,"byte_end":11341,"line_start":367,"line_end":367,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":46},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32450,"byte_end":32456,"line_start":1096,"line_end":1096,"column_start":31,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32590,"byte_end":32596,"line_start":1101,"line_end":1101,"column_start":42,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":3804}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":32810,"byte_end":32816,"line_start":1110,"line_end":1110,"column_start":36,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":3817}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":33133,"byte_end":33139,"line_start":1122,"line_end":1122,"column_start":29,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":33451,"byte_end":33457,"line_start":1135,"line_end":1135,"column_start":34,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":33604,"byte_end":33610,"line_start":1142,"line_end":1142,"column_start":27,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":34196,"byte_end":34202,"line_start":1161,"line_end":1161,"column_start":34,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":34424,"byte_end":34430,"line_start":1170,"line_end":1170,"column_start":34,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":7121}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":34657,"byte_end":34663,"line_start":1180,"line_end":1180,"column_start":38,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":34905,"byte_end":34911,"line_start":1190,"line_end":1190,"column_start":31,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":35092,"byte_end":35096,"line_start":1199,"line_end":1199,"column_start":36,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":35578,"byte_end":35582,"line_start":1214,"line_end":1214,"column_start":47,"column_end":51},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":35774,"byte_end":35778,"line_start":1221,"line_end":1221,"column_start":45,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36098,"byte_end":36106,"line_start":1240,"line_end":1240,"column_start":32,"column_end":40},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36305,"byte_end":36313,"line_start":1249,"line_end":1249,"column_start":43,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36497,"byte_end":36505,"line_start":1256,"line_end":1256,"column_start":41,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36548,"byte_end":36554,"line_start":1258,"line_end":1258,"column_start":36,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":3808}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":36926,"byte_end":36932,"line_start":1275,"line_end":1275,"column_start":36,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":236},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":37206,"byte_end":37212,"line_start":1289,"line_end":1289,"column_start":47,"column_end":53},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":236},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.4.4/src/lib.rs","byte_start":37371,"byte_end":37377,"line_start":1296,"line_end":1296,"column_start":45,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":236},"to":{"krate":2,"index":3796}}]}