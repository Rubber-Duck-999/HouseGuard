{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11","program":"/home/simon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","memchr","/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=583b83d684f1feea","-C","extra-filename=-583b83d684f1feea","--out-dir","/home/simon/Documents/HouseGuard/SystemProcessor/target/rls/debug/deps","-L","dependency=/home/simon/Documents/HouseGuard/SystemProcessor/target/rls/debug/deps","--extern","libc=/home/simon/Documents/HouseGuard/SystemProcessor/target/rls/debug/deps/liblibc-dbf1e66a996b8037.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/simon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/simon/Documents/HouseGuard/SystemProcessor/target/rls/debug/deps/libmemchr-583b83d684f1feea.rmeta"},"prelude":{"crate_id":{"name":"memchr","disambiguator":[16466812369221884883,12562581298478829638]},"crate_root":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src","external_crates":[{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","num":15,"id":{"name":"libc","disambiguator":[180321054851630246,7571081368770862621]}}],"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":0,"byte_end":18568,"line_start":1,"line_end":613,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":0,"byte_end":18568,"line_start":1,"line_end":613,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":34}],"decl_id":null,"docs":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface\nto the corresponding functions in `libc`.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":138,"byte_end":160,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":161,"byte_end":186,"line_start":7,"line_end":7,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":1918,"byte_end":1924,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"memchr","qualname":"::memchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memchr`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":1864,"byte_end":1881,"line_start":74,"line_end":74,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":3430,"byte_end":3437,"line_start":124,"line_end":124,"column_start":8,"column_end":15},"name":"memrchr","qualname":"::memrchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memrchr`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":3376,"byte_end":3393,"line_start":123,"line_end":123,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":4779,"byte_end":4786,"line_start":162,"line_end":162,"column_start":8,"column_end":15},"name":"memchr2","qualname":"::memchr2","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs","byte_start":5982,"byte_end":5989,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"memchr3","qualname":"::memchr3","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}